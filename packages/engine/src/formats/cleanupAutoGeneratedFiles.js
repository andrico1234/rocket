import { unlink } from 'fs/promises';
import { existsSync } from 'fs';

/**
 * @param {object} options
 * @param {string} options.sourceFilePath
 * @param {boolean} options.keepConvertedFiles
 */
export async function cleanupAutoGeneratedFiles({ sourceFilePath, keepConvertedFiles = false }) {
  if (keepConvertedFiles) {
    return;
  }
  if (sourceFilePath.endsWith('.rocket.md')) {
    const mdInJsFilePath = sourceFilePath.replace('.rocket.md', '-converted-md-source.js');
    const jsTemplateFilePath = sourceFilePath.replace('.rocket.md', '-converted-md.js');

    if (existsSync(mdInJsFilePath)) {
      await unlink(mdInJsFilePath);
    }
    if (existsSync(jsTemplateFilePath)) {
      await unlink(jsTemplateFilePath);
    }
  }
  if (sourceFilePath.endsWith('.rocket.html')) {
    const htmlTemplateFilePath = sourceFilePath.replace('.rocket.html', '-converted-html.js');
    if (existsSync(htmlTemplateFilePath)) {
      await unlink(htmlTemplateFilePath);
    }
  }
}
